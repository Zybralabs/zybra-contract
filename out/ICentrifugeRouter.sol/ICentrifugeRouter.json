{"abi":[{"type":"function","name":"cancelDepositRequest","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"topUpAmount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"cancelRedeemRequest","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"topUpAmount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"claimCancelDepositRequest","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"controller","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"claimCancelRedeemRequest","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"controller","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"claimDeposit","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"controller","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"claimRedeem","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"controller","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"disable","inputs":[{"name":"vault","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"enable","inputs":[{"name":"vault","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"enableLockDepositRequest","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"estimate","inputs":[{"name":"payload","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"executeLockedDepositRequest","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"controller","type":"address","internalType":"address"},{"name":"topUpAmount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"getVault","inputs":[{"name":"poolId","type":"uint64","internalType":"uint64"},{"name":"trancheId","type":"bytes16","internalType":"bytes16"},{"name":"asset","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"hasPermissions","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isEnabled","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"controller","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"lockDepositRequest","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"controller","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"lockedRequests","inputs":[{"name":"controller","type":"address","internalType":"address"},{"name":"vault","type":"address","internalType":"address"}],"outputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"multicall","inputs":[{"name":"data","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"permit","inputs":[{"name":"asset","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"},{"name":"assets","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"recoverTokens","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"requestDeposit","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"controller","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"},{"name":"topUpAmount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"requestRedeem","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"controller","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"},{"name":"topUpAmount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"transferAssets","inputs":[{"name":"asset","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"amount","type":"uint128","internalType":"uint128"},{"name":"topUpAmount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"transferAssets","inputs":[{"name":"asset","type":"address","internalType":"address"},{"name":"recipient","type":"bytes32","internalType":"bytes32"},{"name":"amount","type":"uint128","internalType":"uint128"},{"name":"topUpAmount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"transferAssetsFromProxy","inputs":[{"name":"transferProxy","type":"address","internalType":"address"},{"name":"asset","type":"address","internalType":"address"},{"name":"topUpAmount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"transferTrancheTokens","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"domain","type":"uint8","internalType":"enum Domain"},{"name":"id","type":"uint64","internalType":"uint64"},{"name":"recipient","type":"bytes32","internalType":"bytes32"},{"name":"amount","type":"uint128","internalType":"uint128"},{"name":"topUpAmount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"transferTrancheTokens","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"domain","type":"uint8","internalType":"enum Domain"},{"name":"chainId","type":"uint64","internalType":"uint64"},{"name":"recipient","type":"address","internalType":"address"},{"name":"amount","type":"uint128","internalType":"uint128"},{"name":"topUpAmount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"unlockDepositRequest","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"unwrap","inputs":[{"name":"wrapper","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"wrap","inputs":[{"name":"wrapper","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"event","name":"ExecuteLockedDepositRequest","inputs":[{"name":"vault","type":"address","indexed":true,"internalType":"address"},{"name":"controller","type":"address","indexed":true,"internalType":"address"},{"name":"sender","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"LockDepositRequest","inputs":[{"name":"vault","type":"address","indexed":true,"internalType":"address"},{"name":"controller","type":"address","indexed":true,"internalType":"address"},{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"sender","type":"address","indexed":false,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"UnlockDepositRequest","inputs":[{"name":"vault","type":"address","indexed":true,"internalType":"address"},{"name":"controller","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"cancelDepositRequest(address,uint256)":"d76cca03","cancelRedeemRequest(address,uint256)":"c2c32ad5","claimCancelDepositRequest(address,address,address)":"72a2fcca","claimCancelRedeemRequest(address,address,address)":"11dcd791","claimDeposit(address,address,address)":"45e0a315","claimRedeem(address,address,address)":"fa485928","disable(address)":"e6c09edf","enable(address)":"5bfa1b68","enableLockDepositRequest(address,uint256)":"99deddda","estimate(bytes)":"e766cc12","executeLockedDepositRequest(address,address,uint256)":"37daaa91","getVault(uint64,bytes16,address)":"dfb3b551","hasPermissions(address,address)":"e8a67dad","isEnabled(address,address)":"ca7004e7","lockDepositRequest(address,uint256,address,address)":"b667256b","lockedRequests(address,address)":"aa5408fa","multicall(bytes[])":"ac9650d8","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","recoverTokens(address,address,uint256)":"5f3e849f","requestDeposit(address,uint256,address,address,uint256)":"ec19a49d","requestRedeem(address,uint256,address,address,uint256)":"8b30ad56","transferAssets(address,address,uint128,uint256)":"2f80976a","transferAssets(address,bytes32,uint128,uint256)":"f7021608","transferAssetsFromProxy(address,address,uint256)":"1ac6efc9","transferTrancheTokens(address,uint8,uint64,address,uint128,uint256)":"ef1b950e","transferTrancheTokens(address,uint8,uint64,bytes32,uint128,uint256)":"4cd8026f","unlockDepositRequest(address,address)":"8fe3b955","unwrap(address,uint256,address)":"b68f4345","wrap(address,uint256,address,address)":"32e0a7f0"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ExecuteLockedDepositRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LockDepositRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"UnlockDepositRequest\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"topUpAmount\",\"type\":\"uint256\"}],\"name\":\"cancelDepositRequest\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"topUpAmount\",\"type\":\"uint256\"}],\"name\":\"cancelRedeemRequest\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"claimCancelDepositRequest\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"claimCancelRedeemRequest\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"claimDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"claimRedeem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"disable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"enable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"enableLockDepositRequest\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"estimate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"topUpAmount\",\"type\":\"uint256\"}],\"name\":\"executeLockedDepositRequest\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"poolId\",\"type\":\"uint64\"},{\"internalType\":\"bytes16\",\"name\":\"trancheId\",\"type\":\"bytes16\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasPermissions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"isEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"lockDepositRequest\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"lockedRequests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"topUpAmount\",\"type\":\"uint256\"}],\"name\":\"requestDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"topUpAmount\",\"type\":\"uint256\"}],\"name\":\"requestRedeem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"topUpAmount\",\"type\":\"uint256\"}],\"name\":\"transferAssets\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"topUpAmount\",\"type\":\"uint256\"}],\"name\":\"transferAssets\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"transferProxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"topUpAmount\",\"type\":\"uint256\"}],\"name\":\"transferAssetsFromProxy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"enum Domain\",\"name\":\"domain\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"id\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"topUpAmount\",\"type\":\"uint256\"}],\"name\":\"transferTrancheTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"enum Domain\",\"name\":\"domain\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"topUpAmount\",\"type\":\"uint256\"}],\"name\":\"transferTrancheTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"unlockDepositRequest\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wrapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wrapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"wrap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"cancelDepositRequest(address,uint256)\":{\"details\":\"This adds a mandatory prepayment for all the costs that will incur during the transaction.         The caller must call `CentrifugeRouter.estimate` to get estimates how much the deposit will cost.\",\"params\":{\"topUpAmount\":\"Amount that covers all costs outside EVM\",\"vault\":\"The vault where the deposit was initiated\"}},\"cancelRedeemRequest(address,uint256)\":{\"details\":\"This adds a mandatory prepayment for all the costs that will incur during the transaction.         The caller must call `CentrifugeRouter.estimate` to get estimates how much the deposit will cost.\",\"params\":{\"topUpAmount\":\"Amount that covers all costs outside EVM\",\"vault\":\"The vault where the deposit was initiated\"}},\"claimCancelDepositRequest(address,address,address)\":{\"params\":{\"controller\":\"Check  IERC7540CancelDeposit.claimCancelDepositRequest.controller\",\"receiver\":\"Check  IERC7540CancelDeposit.claimCancelDepositRequest.receiver\",\"vault\":\"Address of the vault\"}},\"claimCancelRedeemRequest(address,address,address)\":{\"params\":{\"controller\":\"Check  IERC7540CancelRedeem.claimCancelRedeemRequest.controller\",\"receiver\":\"Check  IERC7540CancelRedeem.claimCancelRedeemRequest.receiver\",\"vault\":\"Address of the vault\"}},\"claimDeposit(address,address,address)\":{\"params\":{\"controller\":\"Check IERC7540Deposit.mint.owner\",\"receiver\":\"Check IERC7540Deposit.mint.receiver\",\"vault\":\"Address of the vault\"}},\"claimRedeem(address,address,address)\":{\"details\":\"If the underlying vault asset is a wrapped one,         `CentrifugeRouter.unwrap` is called and the unwrapped         asset is sent to the receiver\",\"params\":{\"controller\":\"Check IERC7575.withdraw.owner\",\"receiver\":\"Check IERC7575.withdraw.receiver\",\"vault\":\"Address of the vault\"}},\"enable(address)\":{\"details\":\"After this is called, anyone can claim tokens to msg.sender.         Even any requests submitted directly to the vault (not through the CentrifugeRouter) will be         permissionlessly claimable through the CentrifugeRouter, until `disable()` is called.\"},\"enableLockDepositRequest(address,uint256)\":{\"details\":\"It starts interaction with the vault by calling `open`.         Vaults support assets that are wrapped one. When user calls this method         and the vault's asset is a wrapped one, first the balance of the wrapped asset is checked.         If balance >= `amount`, then this asset is used         else  amount is treat as an underlying asset one and it is wrapped.\",\"params\":{\"amount\":\"Amount to be deposited\",\"vault\":\"Address of the vault\"}},\"executeLockedDepositRequest(address,address,uint256)\":{\"params\":{\"controller\":\"Owner of the deposit position\",\"topUpAmount\":\"Amount that covers all costs outside EVM\",\"vault\":\"The vault for which funds are locked\"}},\"hasPermissions(address,address)\":{\"params\":{\"user\":\"Address of the `user` that will operates on the `vault`\",\"vault\":\"Address of the `vault` the `user` wants to operate on\"},\"returns\":{\"_0\":\"Whether `user` has permissions to operate on `vault`\"}},\"lockDepositRequest(address,uint256,address,address)\":{\"details\":\"For initial interaction better use `openLockDepositRequest` which includes some of the message calls         that the caller must do execute before calling `lockDepositRequest`\",\"params\":{\"amount\":\"Amount to invest\",\"controller\":\"Address of the owner of the position\",\"owner\":\"Where the  funds to be deposited will be take from\",\"vault\":\"The address of the vault to invest in\"}},\"lockedRequests(address,address)\":{\"details\":\"This is a getter method\"},\"multicall(bytes[])\":{\"params\":{\"data\":\"An array of all encoded messages calls and their arguments\"}},\"recoverTokens(address,address,uint256)\":{\"details\":\"This method is called only by authorized entities\",\"params\":{\"amount\":\"Amount to send to the receiver.\",\"to\":\"Receiver of the funds\",\"token\":\"It could be 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee         to recover locked native ETH or any ERC20 compatible token.\"}},\"requestDeposit(address,uint256,address,address,uint256)\":{\"details\":\"This adds a mandatory prepayment for all the costs that will incur during the transaction.         The caller must call `CentrifugeRouter.estimate` to get estimates how much the deposit will cost.\",\"params\":{\"amount\":\"Check @param IERC7540Deposit.requestDeposit.assets\",\"controller\":\"Check @param IERC7540Deposit.requestDeposit.controller\",\"owner\":\"Check @param IERC7540Deposit.requestDeposit.owner\",\"topUpAmount\":\"Amount that covers all costs outside EVM\",\"vault\":\"The vault to deposit into\"}},\"requestRedeem(address,uint256,address,address,uint256)\":{\"details\":\"This adds a mandatory prepayment for all the costs that will incur during the transaction.         The caller must call `CentrifugeRouter.estimate` to get estimates how much the deposit will cost.\",\"params\":{\"amount\":\"Check @param IERC7540Redeem.requestRedeem.shares\",\"controller\":\"Check @param IERC7540Redeem.requestRedeem.controller\",\"owner\":\"Check @param IERC7540Redeem.requestRedeem.owner\",\"topUpAmount\":\"Amount that covers all costs outside EVM\",\"vault\":\"The vault to deposit into\"}},\"transferAssets(address,address,uint128,uint256)\":{\"details\":\"the recipient address is padded to 32 bytes internally\"},\"transferAssets(address,bytes32,uint128,uint256)\":{\"details\":\"This adds a mandatory prepayment for all the costs that will incur during the transaction.         The caller must call `CentrifugeRouter.estimate` to get estimates how much the deposit will cost.\",\"params\":{\"amount\":\"Check `IPoolManager.transferAssets.amount`\",\"asset\":\"Check `IPoolManager.transferAssets.asset`\",\"recipient\":\"Check `IPoolManager.transferAssets.recipient`\",\"topUpAmount\":\"Amount that covers all costs outside EVM\"}},\"transferTrancheTokens(address,uint8,uint64,address,uint128,uint256)\":{\"details\":\"The recipient address is padded to 32 bytes internally\"},\"transferTrancheTokens(address,uint8,uint64,bytes32,uint128,uint256)\":{\"details\":\"This adds a mandatory prepayment for all the costs that will incur during the transaction.         The caller must call `CentrifugeRouter.estimate` to get estimates how much the deposit will cost.\",\"params\":{\"amount\":\"Check `IPoolManager.transferTrancheTokens.amount`\",\"domain\":\"Check `IPoolManager.transferTrancheTokens.domain`\",\"id\":\"Check `IPoolManager.transferTrancheTokens.destinationId`\",\"recipient\":\"Check `IPoolManager.transferTrancheTokens.recipient`\",\"topUpAmount\":\"Amount that covers all costs outside EVM\",\"vault\":\"The vault for the corresponding tranche token\"}},\"unlockDepositRequest(address,address)\":{\"params\":{\"receiver\":\"Address of the received of the unlocked funds\",\"vault\":\"Address of the vault for which funds were locked\"}},\"unwrap(address,uint256,address)\":{\"details\":\"Wrapped tokens need to be held by the CentrifugeRouter to be unwrapped.\",\"params\":{\"amount\":\"Amount to be wrapped\",\"receiver\":\"Receiver of the unwrapped tokens\",\"wrapper\":\"The address of the wrapper\"}},\"wrap(address,uint256,address,address)\":{\"params\":{\"amount\":\"Amount to be wrapped\",\"owner\":\"The address from which `amount` is taken from\",\"receiver\":\"Receiver of the wrapped tokens\",\"wrapper\":\"The address of the wrapper\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelDepositRequest(address,uint256)\":{\"notice\":\"Check `IERC7540CancelDeposit.cancelDepositRequest`.\"},\"cancelRedeemRequest(address,uint256)\":{\"notice\":\"Check `IERC7540CancelRedeem.cancelRedeemRequest`.\"},\"claimCancelDepositRequest(address,address,address)\":{\"notice\":\"Check IERC7540CancelDeposit.claimCancelDepositRequest\"},\"claimCancelRedeemRequest(address,address,address)\":{\"notice\":\"Check IERC7540CancelRedeem.claimableCancelRedeemRequest\"},\"claimDeposit(address,address,address)\":{\"notice\":\"Check IERC7540Deposit.mint\"},\"claimRedeem(address,address,address)\":{\"notice\":\"Check IERC7575.withdraw\"},\"disable(address)\":{\"notice\":\"Disable permissionless claiming\"},\"enable(address)\":{\"notice\":\"Enable permissionless claiming\"},\"enableLockDepositRequest(address,uint256)\":{\"notice\":\"Helper method to lock a deposit request, and enable permissionless claiming of that vault in 1 call.\"},\"estimate(bytes)\":{\"notice\":\"Check IGateway.estimate\"},\"executeLockedDepositRequest(address,address,uint256)\":{\"notice\":\"After the controller is given permissions, anyone can call this method and         actually request a deposit with the locked funds on the behalf of the `controller`\"},\"getVault(uint64,bytes16,address)\":{\"notice\":\"Check IPoolManager.getVault\"},\"hasPermissions(address,address)\":{\"notice\":\"Called to check if `user` has permissions on `vault` to execute requests\"},\"isEnabled(address,address)\":{\"notice\":\"Returns whether the controller has called `enable()` for the given `vault`\"},\"lockDepositRequest(address,uint256,address,address)\":{\"notice\":\"Locks `amount` of `vault`'s asset in an escrow before actually sending a deposit LockDepositRequest         There are users that would like to interact with the protocol but don't have permissions yet. They can         lock the funds they would like to deposit beforehand.         Once permissions are granted, anyone can deposit on         their behalf by calling `executeLockedDepositRequest`.         Example: DAO with onchain governance, that wants to invest their treasury             The process that doesn't include calling this method is as follows:                 1. The DAO signs the legal agreements for the pool => no onchain action,                    but only after this the issuer can call update_member to add them as a whitelisted investor                 2. Call `requestDeposit` to lock funds                 3. After the pool has fulfilled their request, call `deposit` to claim their tranche tokens             With the new router function the steps are as follows:                 1. DAO signs the legal agreement + calls  `openLockDepositRequest`  in 1 governance proposal                 2. Issuer then gives them permissions, then calls `executeLockDepositFunds` for them,                    then fulfills the request, then calls `claimDeposit` for them\"},\"lockedRequests(address,address)\":{\"notice\":\"Check how much of the `vault`'s asset is locked for the current `controller`.\"},\"multicall(bytes[])\":{\"notice\":\"router.multicall{value: msgValue}(calls);         The `msg.value` MUST be at least 20 gwei. `multicall{value: 20 gwei}()`\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Check IERC20.permit\"},\"recoverTokens(address,address,uint256)\":{\"notice\":\"Used to recover any ERC-20 token.\"},\"requestDeposit(address,uint256,address,address,uint256)\":{\"notice\":\"Check `IERC7540Deposit.requestDeposit`.\"},\"requestRedeem(address,uint256,address,address,uint256)\":{\"notice\":\"Check `IERC7540Redeem.requestRedeem`.\"},\"transferAssets(address,address,uint128,uint256)\":{\"notice\":\"This is a more friendly version where the recipient is and EVM address\"},\"transferAssets(address,bytes32,uint128,uint256)\":{\"notice\":\"Check `IPoolManager.transferAssets`.\"},\"transferAssetsFromProxy(address,address,uint256)\":{\"notice\":\"Trigger a transfer of assets from a TransferProxy contract.\"},\"transferTrancheTokens(address,uint8,uint64,address,uint128,uint256)\":{\"notice\":\"This is a more friendly version where the recipient is and EVM address\"},\"transferTrancheTokens(address,uint8,uint64,bytes32,uint128,uint256)\":{\"notice\":\"Check `IPoolManager.transferTrancheTokens`.\"},\"unlockDepositRequest(address,address)\":{\"notice\":\"Unlocks all deposited assets of the current caller for a given vault\"},\"unwrap(address,uint256,address)\":{\"notice\":\"There are vault which underlying asset is actuall a wrapped one.\"},\"wrap(address,uint256,address,address)\":{\"notice\":\"There are vault which underlying asset is actuall a wrapped one.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Zybra/interfaces/ICentrifugeRouter.sol\":\"ICentrifugeRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin-3/=node_modules/@openzeppelin-3/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a/=node_modules/erc721a/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/Zybra/interfaces/ICentrifugeRouter.sol\":{\"keccak256\":\"0x1c50aeec09f3409269ef48dc9f02788b6a2d969c77694365f1d380e4dd259f2e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://c98de77445503afb6f77daf4cd1b68be7dec042484316f6889db1aa08d3e51ac\",\"dweb:/ipfs/QmXRUjKHWahy166ukLxEKGVCKohkcgVZFwUaWoG31gSpYp\"]},\"contracts/Zybra/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x0579dcee7480a3747e1a9969f7e501bb3d2dc5fce712d96a2da5062612523933\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4cae7103e74fbdd78d2ea2a1e248aa28fe75c206e2df0367783dc1b442f6a88a\",\"dweb:/ipfs/QmVSNtqKgdCptCNb9XSbF6bBHKJbEqTGYUaJ3eHcXt7E2v\"]},\"contracts/Zybra/interfaces/IRoot.sol\":{\"keccak256\":\"0xdffe29fa5aaeb74957dc8b75a196bd5eb8c7b3dfb4bf26b48326c8bb80fc27b5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://fab6255bb869e07d2b42c4249379d8a9c626da9c24cb3f4e5051dde34cc3b5ec\",\"dweb:/ipfs/QmbqcjHjTUe82AnR5Yfh4emBWSMLVk6C93gv8yteddyrY6\"]},\"contracts/Zybra/interfaces/gateway/IGateway.sol\":{\"keccak256\":\"0xd751516757941c6b081337b777f0df2c779e05cac24ade31bec1fcefd0dcc78f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://950a413a1cca89f7b13e9a5c70c01a5a4c6a9679617d3b81853c7da6f8d952af\",\"dweb:/ipfs/QmVGsyoFyQkJGzVvJxJvB7GobUnj5sTwHBsZRWKtPuWttR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"vault","type":"address","indexed":true},{"internalType":"address","name":"controller","type":"address","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":false}],"type":"event","name":"ExecuteLockedDepositRequest","anonymous":false},{"inputs":[{"internalType":"address","name":"vault","type":"address","indexed":true},{"internalType":"address","name":"controller","type":"address","indexed":true},{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"LockDepositRequest","anonymous":false},{"inputs":[{"internalType":"address","name":"vault","type":"address","indexed":true},{"internalType":"address","name":"controller","type":"address","indexed":true},{"internalType":"address","name":"receiver","type":"address","indexed":true}],"type":"event","name":"UnlockDepositRequest","anonymous":false},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"uint256","name":"topUpAmount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"cancelDepositRequest"},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"uint256","name":"topUpAmount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"cancelRedeemRequest"},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"controller","type":"address"}],"stateMutability":"payable","type":"function","name":"claimCancelDepositRequest"},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"controller","type":"address"}],"stateMutability":"payable","type":"function","name":"claimCancelRedeemRequest"},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"controller","type":"address"}],"stateMutability":"payable","type":"function","name":"claimDeposit"},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"controller","type":"address"}],"stateMutability":"payable","type":"function","name":"claimRedeem"},{"inputs":[{"internalType":"address","name":"vault","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"disable"},{"inputs":[{"internalType":"address","name":"vault","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"enable"},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"enableLockDepositRequest"},{"inputs":[{"internalType":"bytes","name":"payload","type":"bytes"}],"stateMutability":"view","type":"function","name":"estimate","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"controller","type":"address"},{"internalType":"uint256","name":"topUpAmount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"executeLockedDepositRequest"},{"inputs":[{"internalType":"uint64","name":"poolId","type":"uint64"},{"internalType":"bytes16","name":"trancheId","type":"bytes16"},{"internalType":"address","name":"asset","type":"address"}],"stateMutability":"view","type":"function","name":"getVault","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"user","type":"address"}],"stateMutability":"view","type":"function","name":"hasPermissions","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"controller","type":"address"}],"stateMutability":"view","type":"function","name":"isEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"controller","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"payable","type":"function","name":"lockDepositRequest"},{"inputs":[{"internalType":"address","name":"controller","type":"address"},{"internalType":"address","name":"vault","type":"address"}],"stateMutability":"view","type":"function","name":"lockedRequests","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}]},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"stateMutability":"payable","type":"function","name":"multicall"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"permit"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"recoverTokens"},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"controller","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"topUpAmount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"requestDeposit"},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"controller","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"topUpAmount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"requestRedeem"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint256","name":"topUpAmount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"transferAssets"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"bytes32","name":"recipient","type":"bytes32"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint256","name":"topUpAmount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"transferAssets"},{"inputs":[{"internalType":"address","name":"transferProxy","type":"address"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"topUpAmount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"transferAssetsFromProxy"},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"enum Domain","name":"domain","type":"uint8"},{"internalType":"uint64","name":"id","type":"uint64"},{"internalType":"bytes32","name":"recipient","type":"bytes32"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint256","name":"topUpAmount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"transferTrancheTokens"},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"enum Domain","name":"domain","type":"uint8"},{"internalType":"uint64","name":"chainId","type":"uint64"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint256","name":"topUpAmount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"transferTrancheTokens"},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"payable","type":"function","name":"unlockDepositRequest"},{"inputs":[{"internalType":"address","name":"wrapper","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"payable","type":"function","name":"unwrap"},{"inputs":[{"internalType":"address","name":"wrapper","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"payable","type":"function","name":"wrap"}],"devdoc":{"kind":"dev","methods":{"cancelDepositRequest(address,uint256)":{"details":"This adds a mandatory prepayment for all the costs that will incur during the transaction.         The caller must call `CentrifugeRouter.estimate` to get estimates how much the deposit will cost.","params":{"topUpAmount":"Amount that covers all costs outside EVM","vault":"The vault where the deposit was initiated"}},"cancelRedeemRequest(address,uint256)":{"details":"This adds a mandatory prepayment for all the costs that will incur during the transaction.         The caller must call `CentrifugeRouter.estimate` to get estimates how much the deposit will cost.","params":{"topUpAmount":"Amount that covers all costs outside EVM","vault":"The vault where the deposit was initiated"}},"claimCancelDepositRequest(address,address,address)":{"params":{"controller":"Check  IERC7540CancelDeposit.claimCancelDepositRequest.controller","receiver":"Check  IERC7540CancelDeposit.claimCancelDepositRequest.receiver","vault":"Address of the vault"}},"claimCancelRedeemRequest(address,address,address)":{"params":{"controller":"Check  IERC7540CancelRedeem.claimCancelRedeemRequest.controller","receiver":"Check  IERC7540CancelRedeem.claimCancelRedeemRequest.receiver","vault":"Address of the vault"}},"claimDeposit(address,address,address)":{"params":{"controller":"Check IERC7540Deposit.mint.owner","receiver":"Check IERC7540Deposit.mint.receiver","vault":"Address of the vault"}},"claimRedeem(address,address,address)":{"details":"If the underlying vault asset is a wrapped one,         `CentrifugeRouter.unwrap` is called and the unwrapped         asset is sent to the receiver","params":{"controller":"Check IERC7575.withdraw.owner","receiver":"Check IERC7575.withdraw.receiver","vault":"Address of the vault"}},"enable(address)":{"details":"After this is called, anyone can claim tokens to msg.sender.         Even any requests submitted directly to the vault (not through the CentrifugeRouter) will be         permissionlessly claimable through the CentrifugeRouter, until `disable()` is called."},"enableLockDepositRequest(address,uint256)":{"details":"It starts interaction with the vault by calling `open`.         Vaults support assets that are wrapped one. When user calls this method         and the vault's asset is a wrapped one, first the balance of the wrapped asset is checked.         If balance >= `amount`, then this asset is used         else  amount is treat as an underlying asset one and it is wrapped.","params":{"amount":"Amount to be deposited","vault":"Address of the vault"}},"executeLockedDepositRequest(address,address,uint256)":{"params":{"controller":"Owner of the deposit position","topUpAmount":"Amount that covers all costs outside EVM","vault":"The vault for which funds are locked"}},"hasPermissions(address,address)":{"params":{"user":"Address of the `user` that will operates on the `vault`","vault":"Address of the `vault` the `user` wants to operate on"},"returns":{"_0":"Whether `user` has permissions to operate on `vault`"}},"lockDepositRequest(address,uint256,address,address)":{"details":"For initial interaction better use `openLockDepositRequest` which includes some of the message calls         that the caller must do execute before calling `lockDepositRequest`","params":{"amount":"Amount to invest","controller":"Address of the owner of the position","owner":"Where the  funds to be deposited will be take from","vault":"The address of the vault to invest in"}},"lockedRequests(address,address)":{"details":"This is a getter method"},"multicall(bytes[])":{"params":{"data":"An array of all encoded messages calls and their arguments"}},"recoverTokens(address,address,uint256)":{"details":"This method is called only by authorized entities","params":{"amount":"Amount to send to the receiver.","to":"Receiver of the funds","token":"It could be 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee         to recover locked native ETH or any ERC20 compatible token."}},"requestDeposit(address,uint256,address,address,uint256)":{"details":"This adds a mandatory prepayment for all the costs that will incur during the transaction.         The caller must call `CentrifugeRouter.estimate` to get estimates how much the deposit will cost.","params":{"amount":"Check @param IERC7540Deposit.requestDeposit.assets","controller":"Check @param IERC7540Deposit.requestDeposit.controller","owner":"Check @param IERC7540Deposit.requestDeposit.owner","topUpAmount":"Amount that covers all costs outside EVM","vault":"The vault to deposit into"}},"requestRedeem(address,uint256,address,address,uint256)":{"details":"This adds a mandatory prepayment for all the costs that will incur during the transaction.         The caller must call `CentrifugeRouter.estimate` to get estimates how much the deposit will cost.","params":{"amount":"Check @param IERC7540Redeem.requestRedeem.shares","controller":"Check @param IERC7540Redeem.requestRedeem.controller","owner":"Check @param IERC7540Redeem.requestRedeem.owner","topUpAmount":"Amount that covers all costs outside EVM","vault":"The vault to deposit into"}},"transferAssets(address,address,uint128,uint256)":{"details":"the recipient address is padded to 32 bytes internally"},"transferAssets(address,bytes32,uint128,uint256)":{"details":"This adds a mandatory prepayment for all the costs that will incur during the transaction.         The caller must call `CentrifugeRouter.estimate` to get estimates how much the deposit will cost.","params":{"amount":"Check `IPoolManager.transferAssets.amount`","asset":"Check `IPoolManager.transferAssets.asset`","recipient":"Check `IPoolManager.transferAssets.recipient`","topUpAmount":"Amount that covers all costs outside EVM"}},"transferTrancheTokens(address,uint8,uint64,address,uint128,uint256)":{"details":"The recipient address is padded to 32 bytes internally"},"transferTrancheTokens(address,uint8,uint64,bytes32,uint128,uint256)":{"details":"This adds a mandatory prepayment for all the costs that will incur during the transaction.         The caller must call `CentrifugeRouter.estimate` to get estimates how much the deposit will cost.","params":{"amount":"Check `IPoolManager.transferTrancheTokens.amount`","domain":"Check `IPoolManager.transferTrancheTokens.domain`","id":"Check `IPoolManager.transferTrancheTokens.destinationId`","recipient":"Check `IPoolManager.transferTrancheTokens.recipient`","topUpAmount":"Amount that covers all costs outside EVM","vault":"The vault for the corresponding tranche token"}},"unlockDepositRequest(address,address)":{"params":{"receiver":"Address of the received of the unlocked funds","vault":"Address of the vault for which funds were locked"}},"unwrap(address,uint256,address)":{"details":"Wrapped tokens need to be held by the CentrifugeRouter to be unwrapped.","params":{"amount":"Amount to be wrapped","receiver":"Receiver of the unwrapped tokens","wrapper":"The address of the wrapper"}},"wrap(address,uint256,address,address)":{"params":{"amount":"Amount to be wrapped","owner":"The address from which `amount` is taken from","receiver":"Receiver of the wrapped tokens","wrapper":"The address of the wrapper"}}},"version":1},"userdoc":{"kind":"user","methods":{"cancelDepositRequest(address,uint256)":{"notice":"Check `IERC7540CancelDeposit.cancelDepositRequest`."},"cancelRedeemRequest(address,uint256)":{"notice":"Check `IERC7540CancelRedeem.cancelRedeemRequest`."},"claimCancelDepositRequest(address,address,address)":{"notice":"Check IERC7540CancelDeposit.claimCancelDepositRequest"},"claimCancelRedeemRequest(address,address,address)":{"notice":"Check IERC7540CancelRedeem.claimableCancelRedeemRequest"},"claimDeposit(address,address,address)":{"notice":"Check IERC7540Deposit.mint"},"claimRedeem(address,address,address)":{"notice":"Check IERC7575.withdraw"},"disable(address)":{"notice":"Disable permissionless claiming"},"enable(address)":{"notice":"Enable permissionless claiming"},"enableLockDepositRequest(address,uint256)":{"notice":"Helper method to lock a deposit request, and enable permissionless claiming of that vault in 1 call."},"estimate(bytes)":{"notice":"Check IGateway.estimate"},"executeLockedDepositRequest(address,address,uint256)":{"notice":"After the controller is given permissions, anyone can call this method and         actually request a deposit with the locked funds on the behalf of the `controller`"},"getVault(uint64,bytes16,address)":{"notice":"Check IPoolManager.getVault"},"hasPermissions(address,address)":{"notice":"Called to check if `user` has permissions on `vault` to execute requests"},"isEnabled(address,address)":{"notice":"Returns whether the controller has called `enable()` for the given `vault`"},"lockDepositRequest(address,uint256,address,address)":{"notice":"Locks `amount` of `vault`'s asset in an escrow before actually sending a deposit LockDepositRequest         There are users that would like to interact with the protocol but don't have permissions yet. They can         lock the funds they would like to deposit beforehand.         Once permissions are granted, anyone can deposit on         their behalf by calling `executeLockedDepositRequest`.         Example: DAO with onchain governance, that wants to invest their treasury             The process that doesn't include calling this method is as follows:                 1. The DAO signs the legal agreements for the pool => no onchain action,                    but only after this the issuer can call update_member to add them as a whitelisted investor                 2. Call `requestDeposit` to lock funds                 3. After the pool has fulfilled their request, call `deposit` to claim their tranche tokens             With the new router function the steps are as follows:                 1. DAO signs the legal agreement + calls  `openLockDepositRequest`  in 1 governance proposal                 2. Issuer then gives them permissions, then calls `executeLockDepositFunds` for them,                    then fulfills the request, then calls `claimDeposit` for them"},"lockedRequests(address,address)":{"notice":"Check how much of the `vault`'s asset is locked for the current `controller`."},"multicall(bytes[])":{"notice":"router.multicall{value: msgValue}(calls);         The `msg.value` MUST be at least 20 gwei. `multicall{value: 20 gwei}()`"},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"notice":"Check IERC20.permit"},"recoverTokens(address,address,uint256)":{"notice":"Used to recover any ERC-20 token."},"requestDeposit(address,uint256,address,address,uint256)":{"notice":"Check `IERC7540Deposit.requestDeposit`."},"requestRedeem(address,uint256,address,address,uint256)":{"notice":"Check `IERC7540Redeem.requestRedeem`."},"transferAssets(address,address,uint128,uint256)":{"notice":"This is a more friendly version where the recipient is and EVM address"},"transferAssets(address,bytes32,uint128,uint256)":{"notice":"Check `IPoolManager.transferAssets`."},"transferAssetsFromProxy(address,address,uint256)":{"notice":"Trigger a transfer of assets from a TransferProxy contract."},"transferTrancheTokens(address,uint8,uint64,address,uint128,uint256)":{"notice":"This is a more friendly version where the recipient is and EVM address"},"transferTrancheTokens(address,uint8,uint64,bytes32,uint128,uint256)":{"notice":"Check `IPoolManager.transferTrancheTokens`."},"unlockDepositRequest(address,address)":{"notice":"Unlocks all deposited assets of the current caller for a given vault"},"unwrap(address,uint256,address)":{"notice":"There are vault which underlying asset is actuall a wrapped one."},"wrap(address,uint256,address,address)":{"notice":"There are vault which underlying asset is actuall a wrapped one."}},"version":1}},"settings":{"remappings":["@arbitrum/=node_modules/@arbitrum/","@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@eth-optimism/","@layerzerolabs/=node_modules/@layerzerolabs/","@offchainlabs/=node_modules/@offchainlabs/","@openzeppelin-3/=node_modules/@openzeppelin-3/","@openzeppelin/=node_modules/@openzeppelin/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@scroll-tech/=node_modules/@scroll-tech/","@uniswap/=node_modules/@uniswap/","ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a/=node_modules/erc721a/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/"],"optimizer":{"enabled":true,"runs":100},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/Zybra/interfaces/ICentrifugeRouter.sol":"ICentrifugeRouter"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"contracts/Zybra/interfaces/ICentrifugeRouter.sol":{"keccak256":"0x1c50aeec09f3409269ef48dc9f02788b6a2d969c77694365f1d380e4dd259f2e","urls":["bzz-raw://c98de77445503afb6f77daf4cd1b68be7dec042484316f6889db1aa08d3e51ac","dweb:/ipfs/QmXRUjKHWahy166ukLxEKGVCKohkcgVZFwUaWoG31gSpYp"],"license":"AGPL-3.0-only"},"contracts/Zybra/interfaces/IPoolManager.sol":{"keccak256":"0x0579dcee7480a3747e1a9969f7e501bb3d2dc5fce712d96a2da5062612523933","urls":["bzz-raw://4cae7103e74fbdd78d2ea2a1e248aa28fe75c206e2df0367783dc1b442f6a88a","dweb:/ipfs/QmVSNtqKgdCptCNb9XSbF6bBHKJbEqTGYUaJ3eHcXt7E2v"],"license":"AGPL-3.0-only"},"contracts/Zybra/interfaces/IRoot.sol":{"keccak256":"0xdffe29fa5aaeb74957dc8b75a196bd5eb8c7b3dfb4bf26b48326c8bb80fc27b5","urls":["bzz-raw://fab6255bb869e07d2b42c4249379d8a9c626da9c24cb3f4e5051dde34cc3b5ec","dweb:/ipfs/QmbqcjHjTUe82AnR5Yfh4emBWSMLVk6C93gv8yteddyrY6"],"license":"AGPL-3.0-only"},"contracts/Zybra/interfaces/gateway/IGateway.sol":{"keccak256":"0xd751516757941c6b081337b777f0df2c779e05cac24ade31bec1fcefd0dcc78f","urls":["bzz-raw://950a413a1cca89f7b13e9a5c70c01a5a4c6a9679617d3b81853c7da6f8d952af","dweb:/ipfs/QmVGsyoFyQkJGzVvJxJvB7GobUnj5sTwHBsZRWKtPuWttR"],"license":"AGPL-3.0-only"}},"version":1},"id":15}