{"abi":[{"type":"function","name":"denyVault","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"investmentManager","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"newVault","inputs":[{"name":"poolId","type":"uint64","internalType":"uint64"},{"name":"trancheId","type":"bytes16","internalType":"bytes16"},{"name":"asset","type":"address","internalType":"address"},{"name":"tranche","type":"address","internalType":"address"},{"name":"escrow","type":"address","internalType":"address"},{"name":"investmentManager","type":"address","internalType":"address"},{"name":"wards_","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"denyVault(address,address)":"1f2a36e7","newVault(uint64,bytes16,address,address,address,address,address[])":"39342b4a"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"investmentManager\",\"type\":\"address\"}],\"name\":\"denyVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"poolId\",\"type\":\"uint64\"},{\"internalType\":\"bytes16\",\"name\":\"trancheId\",\"type\":\"bytes16\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tranche\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"investmentManager\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"wards_\",\"type\":\"address[]\"}],\"name\":\"newVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"denyVault(address,address)\":{\"params\":{\"investmentManager\":\"Address of the manager to remove the vault from.\",\"vault\":\"Address of the vault to be remove from the authorized callers list.\"}},\"newVault(uint64,bytes16,address,address,address,address,address[])\":{\"params\":{\"asset\":\"Address of the underlying asset that's getting deposited inside the pool.\",\"escrow\":\"A intermediary contract that holdsa temporary funds until request is fulfilled.\",\"investmentManager\":\"Address of a contract that manages incoming/outgoing transactions.\",\"poolId\":\"Id of the pool. Id is one of the already supported pools.\",\"tranche\":\"Address of the tranche token that's getting issues against the deposited asset.\",\"trancheId\":\"Id of the tranche. Id is one of the already supported tranches.\",\"wards_\":\"Address which can call methods behind authorized only.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"denyVault(address,address)\":{\"notice\":\"Removes `vault` from `who`'s authroized callers\"},\"newVault(uint64,bytes16,address,address,address,address,address[])\":{\"notice\":\"Deploys new vault for `poolId`, `trancheId` and `asset`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Zybra/interfaces/factories/IERC7540VaultFactory.sol\":\"IERC7540VaultFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin-3/=node_modules/@openzeppelin-3/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a/=node_modules/erc721a/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/Zybra/interfaces/factories/IERC7540VaultFactory.sol\":{\"keccak256\":\"0x7b7d8472568f4d58aae8fd8cc6ee9da8c137139c7bdc97044ff2219c12afab73\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1e97bfe96ec3dffe3ee2a632b2b1c6d6199b3331f55123613b2ac2dfb1cbd0f3\",\"dweb:/ipfs/QmQ9KKp6RieXchfjQa22CizMaq5YtNjUnQ7EorEnxa5tX2\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"investmentManager","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"denyVault"},{"inputs":[{"internalType":"uint64","name":"poolId","type":"uint64"},{"internalType":"bytes16","name":"trancheId","type":"bytes16"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"tranche","type":"address"},{"internalType":"address","name":"escrow","type":"address"},{"internalType":"address","name":"investmentManager","type":"address"},{"internalType":"address[]","name":"wards_","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"newVault","outputs":[{"internalType":"address","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"denyVault(address,address)":{"params":{"investmentManager":"Address of the manager to remove the vault from.","vault":"Address of the vault to be remove from the authorized callers list."}},"newVault(uint64,bytes16,address,address,address,address,address[])":{"params":{"asset":"Address of the underlying asset that's getting deposited inside the pool.","escrow":"A intermediary contract that holdsa temporary funds until request is fulfilled.","investmentManager":"Address of a contract that manages incoming/outgoing transactions.","poolId":"Id of the pool. Id is one of the already supported pools.","tranche":"Address of the tranche token that's getting issues against the deposited asset.","trancheId":"Id of the tranche. Id is one of the already supported tranches.","wards_":"Address which can call methods behind authorized only."}}},"version":1},"userdoc":{"kind":"user","methods":{"denyVault(address,address)":{"notice":"Removes `vault` from `who`'s authroized callers"},"newVault(uint64,bytes16,address,address,address,address,address[])":{"notice":"Deploys new vault for `poolId`, `trancheId` and `asset`."}},"version":1}},"settings":{"remappings":["@arbitrum/=node_modules/@arbitrum/","@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@eth-optimism/","@layerzerolabs/=node_modules/@layerzerolabs/","@offchainlabs/=node_modules/@offchainlabs/","@openzeppelin-3/=node_modules/@openzeppelin-3/","@openzeppelin/=node_modules/@openzeppelin/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@scroll-tech/=node_modules/@scroll-tech/","@uniswap/=node_modules/@uniswap/","ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a/=node_modules/erc721a/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/"],"optimizer":{"enabled":true,"runs":100},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/Zybra/interfaces/factories/IERC7540VaultFactory.sol":"IERC7540VaultFactory"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"contracts/Zybra/interfaces/factories/IERC7540VaultFactory.sol":{"keccak256":"0x7b7d8472568f4d58aae8fd8cc6ee9da8c137139c7bdc97044ff2219c12afab73","urls":["bzz-raw://1e97bfe96ec3dffe3ee2a632b2b1c6d6199b3331f55123613b2ac2dfb1cbd0f3","dweb:/ipfs/QmQ9KKp6RieXchfjQa22CizMaq5YtNjUnQ7EorEnxa5tX2"],"license":"AGPL-3.0-only"}},"version":1},"id":27}