{"abi":[{"type":"function","name":"getAddress","inputs":[{"name":"poolId","type":"uint64","internalType":"uint64"},{"name":"trancheId","type":"bytes16","internalType":"bytes16"},{"name":"decimals","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"newTranche","inputs":[{"name":"poolId","type":"uint64","internalType":"uint64"},{"name":"trancheId","type":"bytes16","internalType":"bytes16"},{"name":"name","type":"string","internalType":"string"},{"name":"symbol","type":"string","internalType":"string"},{"name":"decimals","type":"uint8","internalType":"uint8"},{"name":"trancheWards","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getAddress(uint64,bytes16,uint8)":"67f28ce7","newTranche(uint64,bytes16,string,string,uint8,address[])":"e3e0cbfd"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"poolId\",\"type\":\"uint64\"},{\"internalType\":\"bytes16\",\"name\":\"trancheId\",\"type\":\"bytes16\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"poolId\",\"type\":\"uint64\"},{\"internalType\":\"bytes16\",\"name\":\"trancheId\",\"type\":\"bytes16\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"trancheWards\",\"type\":\"address[]\"}],\"name\":\"newTranche\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"newTranche(uint64,bytes16,string,string,uint8,address[])\":{\"details\":\"In order to have the same address on different EVMs `salt` should be used         during creationg process.\",\"params\":{\"decimals\":\"Decimals of the new token.\",\"name\":\"Name of the new token.\",\"poolId\":\"Id of the pool. Id is one of the already supported pools.\",\"symbol\":\"Symbol of the new token.\",\"trancheId\":\"Id of the tranche. Id is one of the already supported tranches.\",\"trancheWards\":\"Address which can call methods behind authorized only.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAddress(uint64,bytes16,uint8)\":{\"notice\":\"Returns the predicted address (using CREATE2)\"},\"newTranche(uint64,bytes16,string,string,uint8,address[])\":{\"notice\":\"Used to deploy new tranche tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Zybra/interfaces/factories/ITrancheFactory.sol\":\"ITrancheFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin-3/=node_modules/@openzeppelin-3/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a/=node_modules/erc721a/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/Zybra/interfaces/factories/ITrancheFactory.sol\":{\"keccak256\":\"0x0ae9a78f7229ac3b1f9442f2df7f713b2d65f4287bc267e695c016f992e78db8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://fc74aedce9f44fa974c67af396814451dee66ceab6ae9ad36a23a85ce32fc1ec\",\"dweb:/ipfs/QmVcD8T8wnHNKNNtvCZnA2BX8wPHywoRmr7bwqw7C21XaP\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint64","name":"poolId","type":"uint64"},{"internalType":"bytes16","name":"trancheId","type":"bytes16"},{"internalType":"uint8","name":"decimals","type":"uint8"}],"stateMutability":"view","type":"function","name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint64","name":"poolId","type":"uint64"},{"internalType":"bytes16","name":"trancheId","type":"bytes16"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"address[]","name":"trancheWards","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"newTranche","outputs":[{"internalType":"address","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"newTranche(uint64,bytes16,string,string,uint8,address[])":{"details":"In order to have the same address on different EVMs `salt` should be used         during creationg process.","params":{"decimals":"Decimals of the new token.","name":"Name of the new token.","poolId":"Id of the pool. Id is one of the already supported pools.","symbol":"Symbol of the new token.","trancheId":"Id of the tranche. Id is one of the already supported tranches.","trancheWards":"Address which can call methods behind authorized only."}}},"version":1},"userdoc":{"kind":"user","methods":{"getAddress(uint64,bytes16,uint8)":{"notice":"Returns the predicted address (using CREATE2)"},"newTranche(uint64,bytes16,string,string,uint8,address[])":{"notice":"Used to deploy new tranche tokens."}},"version":1}},"settings":{"remappings":["@arbitrum/=node_modules/@arbitrum/","@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@eth-optimism/","@layerzerolabs/=node_modules/@layerzerolabs/","@offchainlabs/=node_modules/@offchainlabs/","@openzeppelin-3/=node_modules/@openzeppelin-3/","@openzeppelin/=node_modules/@openzeppelin/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@scroll-tech/=node_modules/@scroll-tech/","@uniswap/=node_modules/@uniswap/","ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a/=node_modules/erc721a/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/"],"optimizer":{"enabled":true,"runs":100},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/Zybra/interfaces/factories/ITrancheFactory.sol":"ITrancheFactory"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"contracts/Zybra/interfaces/factories/ITrancheFactory.sol":{"keccak256":"0x0ae9a78f7229ac3b1f9442f2df7f713b2d65f4287bc267e695c016f992e78db8","urls":["bzz-raw://fc74aedce9f44fa974c67af396814451dee66ceab6ae9ad36a23a85ce32fc1ec","dweb:/ipfs/QmVcD8T8wnHNKNNtvCZnA2BX8wPHywoRmr7bwqw7C21XaP"],"license":"AGPL-3.0-only"}},"version":1},"id":28}