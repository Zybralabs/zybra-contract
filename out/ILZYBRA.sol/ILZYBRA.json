{"abi":[{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"burn","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"burn","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"burnFrom","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"getBurners","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getMinters","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"grantBurnRole","inputs":[{"name":"burner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"grantMintAndBurnRoles","inputs":[{"name":"burnAndMinter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"grantMintRole","inputs":[{"name":"minter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isBurner","inputs":[{"name":"burner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isMinter","inputs":[{"name":"minter","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"maxSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"mint","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokeBurnRole","inputs":[{"name":"burner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokeMintRole","inputs":[{"name":"minter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"recipient","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","burn(address,uint256)":"9dc29fac","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","getBurners()":"86fe8b43","getMinters()":"6b32810b","grantBurnRole(address)":"c64d0ebc","grantMintAndBurnRoles(address)":"c630948d","grantMintRole(address)":"c2e3273d","isBurner(address)":"4334614a","isMinter(address)":"aa271e1a","maxSupply()":"d5abeb01","mint(address,uint256)":"40c10f19","revokeBurnRole(address)":"4f5632f8","revokeMintRole(address)":"f81094f3","supportsInterface(bytes4)":"01ffc9a7","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBurners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinters\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"}],\"name\":\"grantBurnRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"burnAndMinter\",\"type\":\"address\"}],\"name\":\"grantMintAndBurnRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"grantMintRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"}],\"name\":\"isBurner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"}],\"name\":\"revokeBurnRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"revokeMintRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Returns a boolean value indicating whether the operation succeeded.\"},\"burn(address,uint256)\":{\"details\":\"Only accounts with the burner role can burn tokens from a given account.      Reverts if the account does not have enough balance.\"},\"burn(uint256)\":{\"details\":\"Only accounts with the burner role can burn tokens.\"},\"burnFrom(address,uint256)\":{\"details\":\"Only accounts with the burner role can burn tokens.\"},\"grantBurnRole(address)\":{\"details\":\"Only the owner can call this function.\"},\"grantMintAndBurnRoles(address)\":{\"details\":\"Only the owner can call this function.\"},\"grantMintRole(address)\":{\"details\":\"Only the owner can call this function.\"},\"mint(address,uint256)\":{\"details\":\"Only accounts with the minter role can mint tokens.\"},\"revokeBurnRole(address)\":{\"details\":\"Only the owner can call this function.\"},\"revokeMintRole(address)\":{\"details\":\"Only the owner can call this function.\"},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"The interface identifier, as specified in ERC165.\"},\"returns\":{\"_0\":\"`true` if the contract implements `interfaceId`, `false` otherwise.\"}},\"transfer(address,uint256)\":{\"details\":\"Returns a boolean value indicating whether the operation succeeded.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"`amount` is then deducted from the caller's allowance.Returns a boolean value indicating whether the operation succeeded.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`.\"},\"approve(address,uint256)\":{\"notice\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.\"},\"burn(address,uint256)\":{\"notice\":\"Burns `amount` tokens from `account`.\"},\"burn(uint256)\":{\"notice\":\"Burns `amount` tokens from the caller.\"},\"burnFrom(address,uint256)\":{\"notice\":\"Burns `amount` tokens from `account`, reducing the total supply.\"},\"decimals()\":{\"notice\":\"Returns the number of decimals used in the user representation.\"},\"getBurners()\":{\"notice\":\"Returns a list of all addresses that have the burn role.\"},\"getMinters()\":{\"notice\":\"Returns a list of all addresses that have the mint role.\"},\"grantBurnRole(address)\":{\"notice\":\"Grants the burn role to `burner`.\"},\"grantMintAndBurnRoles(address)\":{\"notice\":\"Grants both mint and burn roles to `burnAndMinter`.\"},\"grantMintRole(address)\":{\"notice\":\"Grants the mint role to `minter`.\"},\"isBurner(address)\":{\"notice\":\"Checks if `burner` is a permissioned burner.\"},\"isMinter(address)\":{\"notice\":\"Checks if `minter` is a permissioned minter.\"},\"maxSupply()\":{\"notice\":\"Returns the maximum supply of the token, 0 if unlimited.\"},\"mint(address,uint256)\":{\"notice\":\"Mints `amount` tokens to the `account`, increasing the total supply.\"},\"revokeBurnRole(address)\":{\"notice\":\"Revokes the burn role from `burner`.\"},\"revokeMintRole(address)\":{\"notice\":\"Revokes the mint role from `minter`.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Checks whether the contract implements a given interface.\"},\"transfer(address,uint256)\":{\"notice\":\"Moves `amount` tokens from the caller's account to `recipient`.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Zybra/interfaces/ILZYBRA.sol\":\"ILZYBRA\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin-3/=node_modules/@openzeppelin-3/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a/=node_modules/erc721a/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/Zybra/interfaces/ILZYBRA.sol\":{\"keccak256\":\"0x564bccc4587dfd01e95626dbce10bffa5d91cc884c5a0552ed42e18f443d6f40\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5e1d825b6c7c3e9995de309bf7111dca95c573cf3bddbc16e2fc96a66ebfd759\",\"dweb:/ipfs/QmW7XNVP2MxTS9jAm48abRnWjPRLBAoMHihcdPCh3dp6gD\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"stateMutability":"view","type":"function","name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"burn"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"burn"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"burnFrom"},{"inputs":[],"stateMutability":"view","type":"function","name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBurners","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getMinters","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"address","name":"burner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"grantBurnRole"},{"inputs":[{"internalType":"address","name":"burnAndMinter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"grantMintAndBurnRoles"},{"inputs":[{"internalType":"address","name":"minter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"grantMintRole"},{"inputs":[{"internalType":"address","name":"burner","type":"address"}],"stateMutability":"view","type":"function","name":"isBurner","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"minter","type":"address"}],"stateMutability":"view","type":"function","name":"isMinter","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"mint"},{"inputs":[{"internalType":"address","name":"burner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokeBurnRole"},{"inputs":[{"internalType":"address","name":"minter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokeMintRole"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"Returns a boolean value indicating whether the operation succeeded."},"burn(address,uint256)":{"details":"Only accounts with the burner role can burn tokens from a given account.      Reverts if the account does not have enough balance."},"burn(uint256)":{"details":"Only accounts with the burner role can burn tokens."},"burnFrom(address,uint256)":{"details":"Only accounts with the burner role can burn tokens."},"grantBurnRole(address)":{"details":"Only the owner can call this function."},"grantMintAndBurnRoles(address)":{"details":"Only the owner can call this function."},"grantMintRole(address)":{"details":"Only the owner can call this function."},"mint(address,uint256)":{"details":"Only accounts with the minter role can mint tokens."},"revokeBurnRole(address)":{"details":"Only the owner can call this function."},"revokeMintRole(address)":{"details":"Only the owner can call this function."},"supportsInterface(bytes4)":{"params":{"interfaceId":"The interface identifier, as specified in ERC165."},"returns":{"_0":"`true` if the contract implements `interfaceId`, `false` otherwise."}},"transfer(address,uint256)":{"details":"Returns a boolean value indicating whether the operation succeeded."},"transferFrom(address,address,uint256)":{"details":"`amount` is then deducted from the caller's allowance.Returns a boolean value indicating whether the operation succeeded."}},"version":1},"userdoc":{"kind":"user","methods":{"allowance(address,address)":{"notice":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`."},"approve(address,uint256)":{"notice":"Sets `amount` as the allowance of `spender` over the caller's tokens."},"burn(address,uint256)":{"notice":"Burns `amount` tokens from `account`."},"burn(uint256)":{"notice":"Burns `amount` tokens from the caller."},"burnFrom(address,uint256)":{"notice":"Burns `amount` tokens from `account`, reducing the total supply."},"decimals()":{"notice":"Returns the number of decimals used in the user representation."},"getBurners()":{"notice":"Returns a list of all addresses that have the burn role."},"getMinters()":{"notice":"Returns a list of all addresses that have the mint role."},"grantBurnRole(address)":{"notice":"Grants the burn role to `burner`."},"grantMintAndBurnRoles(address)":{"notice":"Grants both mint and burn roles to `burnAndMinter`."},"grantMintRole(address)":{"notice":"Grants the mint role to `minter`."},"isBurner(address)":{"notice":"Checks if `burner` is a permissioned burner."},"isMinter(address)":{"notice":"Checks if `minter` is a permissioned minter."},"maxSupply()":{"notice":"Returns the maximum supply of the token, 0 if unlimited."},"mint(address,uint256)":{"notice":"Mints `amount` tokens to the `account`, increasing the total supply."},"revokeBurnRole(address)":{"notice":"Revokes the burn role from `burner`."},"revokeMintRole(address)":{"notice":"Revokes the mint role from `minter`."},"supportsInterface(bytes4)":{"notice":"Checks whether the contract implements a given interface."},"transfer(address,uint256)":{"notice":"Moves `amount` tokens from the caller's account to `recipient`."},"transferFrom(address,address,uint256)":{"notice":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism."}},"version":1}},"settings":{"remappings":["@arbitrum/=node_modules/@arbitrum/","@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@eth-optimism/","@layerzerolabs/=node_modules/@layerzerolabs/","@offchainlabs/=node_modules/@offchainlabs/","@openzeppelin-3/=node_modules/@openzeppelin-3/","@openzeppelin/=node_modules/@openzeppelin/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@scroll-tech/=node_modules/@scroll-tech/","@uniswap/=node_modules/@uniswap/","ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a/=node_modules/erc721a/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/"],"optimizer":{"enabled":true,"runs":100},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/Zybra/interfaces/ILZYBRA.sol":"ILZYBRA"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"contracts/Zybra/interfaces/ILZYBRA.sol":{"keccak256":"0x564bccc4587dfd01e95626dbce10bffa5d91cc884c5a0552ed42e18f443d6f40","urls":["bzz-raw://5e1d825b6c7c3e9995de309bf7111dca95c573cf3bddbc16e2fc96a66ebfd759","dweb:/ipfs/QmW7XNVP2MxTS9jAm48abRnWjPRLBAoMHihcdPCh3dp6gD"],"license":"BUSL-1.1"}},"version":1},"id":22}