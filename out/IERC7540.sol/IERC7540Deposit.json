{"abi":[{"type":"function","name":"claimableDepositRequest","inputs":[{"name":"requestId","type":"uint256","internalType":"uint256"},{"name":"controller","type":"address","internalType":"address"}],"outputs":[{"name":"claimableAssets","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"deposit","inputs":[{"name":"assets","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"},{"name":"controller","type":"address","internalType":"address"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"isOperator","inputs":[{"name":"controller","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"status","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"mint","inputs":[{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"},{"name":"controller","type":"address","internalType":"address"}],"outputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"pendingDepositRequest","inputs":[{"name":"requestId","type":"uint256","internalType":"uint256"},{"name":"controller","type":"address","internalType":"address"}],"outputs":[{"name":"pendingAssets","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"requestDeposit","inputs":[{"name":"assets","type":"uint256","internalType":"uint256"},{"name":"controller","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"requestId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"setOperator","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"approved","type":"bool","internalType":"bool"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"event","name":"DepositRequest","inputs":[{"name":"controller","type":"address","indexed":true,"internalType":"address"},{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"requestId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"sender","type":"address","indexed":false,"internalType":"address"},{"name":"assets","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OperatorSet","inputs":[{"name":"controller","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"claimableDepositRequest(uint256,address)":"995ea21a","deposit(uint256,address,address)":"2e2d2984","isOperator(address,address)":"b6363cf2","mint(uint256,address,address)":"da39b3e7","pendingDepositRequest(uint256,address)":"26c6f96c","requestDeposit(uint256,address,address)":"85b77f45","setOperator(address,bool)":"558a7297"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"DepositRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"OperatorSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"claimableDepositRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimableAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"pendingDepositRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pendingAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"requestDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OperatorSet(address,address,bool)\":{\"details\":\"The event emitted when an operator is set.\",\"params\":{\"approved\":\"The approval status.\",\"controller\":\"The address of the controller.\",\"operator\":\"The address of the operator.\"}}},\"kind\":\"dev\",\"methods\":{\"claimableDepositRequest(uint256,address)\":{\"details\":\"Returns the amount of requested assets in Claimable state for the controller to deposit or mint. - MUST NOT include any assets in Pending state. - MUST NOT show any variations depending on the caller. - MUST NOT revert unless due to integer overflow caused by an unreasonably large input.\"},\"deposit(uint256,address,address)\":{\"details\":\"Mints shares Vault shares to receiver by claiming the Request of the controller. - MUST emit the Deposit event. - controller MUST equal msg.sender unless the controller has approved the msg.sender as an operator.\"},\"isOperator(address,address)\":{\"details\":\"Returns `true` if the `operator` is approved as an operator for an `controller`.\",\"params\":{\"controller\":\"The address of the controller.\",\"operator\":\"The address of the operator.\"},\"returns\":{\"status\":\"The approval status\"}},\"mint(uint256,address,address)\":{\"details\":\"Mints exactly shares Vault shares to receiver by claiming the Request of the controller. - MUST emit the Deposit event. - controller MUST equal msg.sender unless the controller has approved the msg.sender as an operator.\"},\"pendingDepositRequest(uint256,address)\":{\"details\":\"Returns the amount of requested assets in Pending state. - MUST NOT include any assets in Claimable state for deposit or mint. - MUST NOT show any variations depending on the caller. - MUST NOT revert unless due to integer overflow caused by an unreasonably large input.\"},\"requestDeposit(uint256,address,address)\":{\"details\":\"Transfers assets from sender into the Vault and submits a Request for asynchronous deposit. - MUST support ERC-20 approve / transferFrom on asset as a deposit Request flow. - MUST revert if all of assets cannot be requested for deposit. - owner MUST be msg.sender unless some unspecified explicit approval is given by the caller,    approval of ERC-20 tokens from owner to sender is NOT enough.\",\"params\":{\"assets\":\"the amount of deposit assets to transfer from owner\",\"controller\":\"the controller of the request who will be able to operate the request\",\"owner\":\"the source of the deposit assets NOTE: most implementations will require pre-approval of the Vault with the Vault's underlying asset token.\"}},\"setOperator(address,bool)\":{\"details\":\"Sets or removes an operator for the caller.\",\"params\":{\"approved\":\"The approval status.\",\"operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"Whether the call was executed successfully or not\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Zybra/interfaces/IERC7540.sol\":\"IERC7540Deposit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin-3/=node_modules/@openzeppelin-3/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a/=node_modules/erc721a/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/Zybra/interfaces/IERC7540.sol\":{\"keccak256\":\"0xa8d8293fb6f0229c832e9532f4904496525ba0d591712ee5c2090ac1ce7b7fb3\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5d193af9a750fcefbea62a39bb117c3b32154e2483fab9f914521c334163d9d5\",\"dweb:/ipfs/QmVQUiYL2y8fZv9pLc7ZRJPJUXiKARDj4S2uDy5vskWXNQ\"]},\"contracts/Zybra/interfaces/IERC7575.sol\":{\"keccak256\":\"0xd20d90aef2774e7fedd5e1aecd5ab31fba4215d12995052795d1dac0958af712\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4232a8a26349b96f682f90e4f1529d365e44840a3a3ee508829434033632f346\",\"dweb:/ipfs/QmXpAFrFTJNhTWkbdkjTeYgZZmR18oUXCyzuwPZB1ETvHr\"]},\"contracts/Zybra/interfaces/IRoot.sol\":{\"keccak256\":\"0xdffe29fa5aaeb74957dc8b75a196bd5eb8c7b3dfb4bf26b48326c8bb80fc27b5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://fab6255bb869e07d2b42c4249379d8a9c626da9c24cb3f4e5051dde34cc3b5ec\",\"dweb:/ipfs/QmbqcjHjTUe82AnR5Yfh4emBWSMLVk6C93gv8yteddyrY6\"]},\"contracts/Zybra/interfaces/gateway/IGateway.sol\":{\"keccak256\":\"0xd751516757941c6b081337b777f0df2c779e05cac24ade31bec1fcefd0dcc78f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://950a413a1cca89f7b13e9a5c70c01a5a4c6a9679617d3b81853c7da6f8d952af\",\"dweb:/ipfs/QmVGsyoFyQkJGzVvJxJvB7GobUnj5sTwHBsZRWKtPuWttR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"controller","type":"address","indexed":true},{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"uint256","name":"requestId","type":"uint256","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":false},{"internalType":"uint256","name":"assets","type":"uint256","indexed":false}],"type":"event","name":"DepositRequest","anonymous":false},{"inputs":[{"internalType":"address","name":"controller","type":"address","indexed":true},{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"bool","name":"approved","type":"bool","indexed":false}],"type":"event","name":"OperatorSet","anonymous":false},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"address","name":"controller","type":"address"}],"stateMutability":"view","type":"function","name":"claimableDepositRequest","outputs":[{"internalType":"uint256","name":"claimableAssets","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"controller","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"deposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"controller","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"isOperator","outputs":[{"internalType":"bool","name":"status","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"controller","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"mint","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"address","name":"controller","type":"address"}],"stateMutability":"view","type":"function","name":"pendingDepositRequest","outputs":[{"internalType":"uint256","name":"pendingAssets","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"controller","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"requestDeposit","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setOperator","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"claimableDepositRequest(uint256,address)":{"details":"Returns the amount of requested assets in Claimable state for the controller to deposit or mint. - MUST NOT include any assets in Pending state. - MUST NOT show any variations depending on the caller. - MUST NOT revert unless due to integer overflow caused by an unreasonably large input."},"deposit(uint256,address,address)":{"details":"Mints shares Vault shares to receiver by claiming the Request of the controller. - MUST emit the Deposit event. - controller MUST equal msg.sender unless the controller has approved the msg.sender as an operator."},"isOperator(address,address)":{"details":"Returns `true` if the `operator` is approved as an operator for an `controller`.","params":{"controller":"The address of the controller.","operator":"The address of the operator."},"returns":{"status":"The approval status"}},"mint(uint256,address,address)":{"details":"Mints exactly shares Vault shares to receiver by claiming the Request of the controller. - MUST emit the Deposit event. - controller MUST equal msg.sender unless the controller has approved the msg.sender as an operator."},"pendingDepositRequest(uint256,address)":{"details":"Returns the amount of requested assets in Pending state. - MUST NOT include any assets in Claimable state for deposit or mint. - MUST NOT show any variations depending on the caller. - MUST NOT revert unless due to integer overflow caused by an unreasonably large input."},"requestDeposit(uint256,address,address)":{"details":"Transfers assets from sender into the Vault and submits a Request for asynchronous deposit. - MUST support ERC-20 approve / transferFrom on asset as a deposit Request flow. - MUST revert if all of assets cannot be requested for deposit. - owner MUST be msg.sender unless some unspecified explicit approval is given by the caller,    approval of ERC-20 tokens from owner to sender is NOT enough.","params":{"assets":"the amount of deposit assets to transfer from owner","controller":"the controller of the request who will be able to operate the request","owner":"the source of the deposit assets NOTE: most implementations will require pre-approval of the Vault with the Vault's underlying asset token."}},"setOperator(address,bool)":{"details":"Sets or removes an operator for the caller.","params":{"approved":"The approval status.","operator":"The address of the operator."},"returns":{"_0":"Whether the call was executed successfully or not"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@arbitrum/=node_modules/@arbitrum/","@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@eth-optimism/","@layerzerolabs/=node_modules/@layerzerolabs/","@offchainlabs/=node_modules/@offchainlabs/","@openzeppelin-3/=node_modules/@openzeppelin-3/","@openzeppelin/=node_modules/@openzeppelin/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@scroll-tech/=node_modules/@scroll-tech/","@uniswap/=node_modules/@uniswap/","ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a/=node_modules/erc721a/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/"],"optimizer":{"enabled":true,"runs":100},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/Zybra/interfaces/IERC7540.sol":"IERC7540Deposit"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"contracts/Zybra/interfaces/IERC7540.sol":{"keccak256":"0xa8d8293fb6f0229c832e9532f4904496525ba0d591712ee5c2090ac1ce7b7fb3","urls":["bzz-raw://5d193af9a750fcefbea62a39bb117c3b32154e2483fab9f914521c334163d9d5","dweb:/ipfs/QmVQUiYL2y8fZv9pLc7ZRJPJUXiKARDj4S2uDy5vskWXNQ"],"license":"AGPL-3.0-only"},"contracts/Zybra/interfaces/IERC7575.sol":{"keccak256":"0xd20d90aef2774e7fedd5e1aecd5ab31fba4215d12995052795d1dac0958af712","urls":["bzz-raw://4232a8a26349b96f682f90e4f1529d365e44840a3a3ee508829434033632f346","dweb:/ipfs/QmXpAFrFTJNhTWkbdkjTeYgZZmR18oUXCyzuwPZB1ETvHr"],"license":"AGPL-3.0-only"},"contracts/Zybra/interfaces/IRoot.sol":{"keccak256":"0xdffe29fa5aaeb74957dc8b75a196bd5eb8c7b3dfb4bf26b48326c8bb80fc27b5","urls":["bzz-raw://fab6255bb869e07d2b42c4249379d8a9c626da9c24cb3f4e5051dde34cc3b5ec","dweb:/ipfs/QmbqcjHjTUe82AnR5Yfh4emBWSMLVk6C93gv8yteddyrY6"],"license":"AGPL-3.0-only"},"contracts/Zybra/interfaces/gateway/IGateway.sol":{"keccak256":"0xd751516757941c6b081337b777f0df2c779e05cac24ade31bec1fcefd0dcc78f","urls":["bzz-raw://950a413a1cca89f7b13e9a5c70c01a5a4c6a9679617d3b81853c7da6f8d952af","dweb:/ipfs/QmVGsyoFyQkJGzVvJxJvB7GobUnj5sTwHBsZRWKtPuWttR"],"license":"AGPL-3.0-only"}},"version":1},"id":17}