{"abi":[{"type":"function","name":"checkERC20Transfer","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"hookData","type":"tuple","internalType":"struct HookData","components":[{"name":"from","type":"bytes16","internalType":"bytes16"},{"name":"to","type":"bytes16","internalType":"bytes16"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"onERC20AuthTransfer","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"hookdata","type":"tuple","internalType":"struct HookData","components":[{"name":"from","type":"bytes16","internalType":"bytes16"},{"name":"to","type":"bytes16","internalType":"bytes16"}]}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"onERC20Transfer","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"hookdata","type":"tuple","internalType":"struct HookData","components":[{"name":"from","type":"bytes16","internalType":"bytes16"},{"name":"to","type":"bytes16","internalType":"bytes16"}]}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"updateRestriction","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"update","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"checkERC20Transfer(address,address,uint256,(bytes16,bytes16))":"ef59bc92","onERC20AuthTransfer(address,address,address,uint256,(bytes16,bytes16))":"078d18cd","onERC20Transfer(address,address,uint256,(bytes16,bytes16))":"3f71910e","supportsInterface(bytes4)":"01ffc9a7","updateRestriction(address,bytes)":"7aeba8d5"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes16\",\"name\":\"from\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"to\",\"type\":\"bytes16\"}],\"internalType\":\"struct HookData\",\"name\":\"hookData\",\"type\":\"tuple\"}],\"name\":\"checkERC20Transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes16\",\"name\":\"from\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"to\",\"type\":\"bytes16\"}],\"internalType\":\"struct HookData\",\"name\":\"hookdata\",\"type\":\"tuple\"}],\"name\":\"onERC20AuthTransfer\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes16\",\"name\":\"from\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"to\",\"type\":\"bytes16\"}],\"internalType\":\"struct HookData\",\"name\":\"hookdata\",\"type\":\"tuple\"}],\"name\":\"onERC20Transfer\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"update\",\"type\":\"bytes\"}],\"name\":\"updateRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC20AuthTransfer(address,address,address,uint256,(bytes16,bytes16))\":{\"details\":\"MUST return bytes4(keccak256(\\\"onERC20AuthTransfer(address,address,address,uint256,(bytes16,bytes16))\\\"))         if successful\"},\"onERC20Transfer(address,address,uint256,(bytes16,bytes16))\":{\"details\":\"MUST return bytes4(keccak256(\\\"onERC20Transfer(address,address,uint256,(bytes16,bytes16))\\\"))         if successful\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"updateRestriction(address,bytes)\":{\"details\":\"MAY be user specific, which would be included in the encoded `update` value\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkERC20Transfer(address,address,uint256,(bytes16,bytes16))\":{\"notice\":\"Check if given transfer can be performed\"},\"onERC20AuthTransfer(address,address,address,uint256,(bytes16,bytes16))\":{\"notice\":\"Callback on authorized ERC20 transfer.\"},\"onERC20Transfer(address,address,uint256,(bytes16,bytes16))\":{\"notice\":\"Callback on standard ERC20 transfer.\"},\"updateRestriction(address,bytes)\":{\"notice\":\"Update a set of restriction for a token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Zybra/interfaces/token/IHook.sol\":\"IHook\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin-3/=node_modules/@openzeppelin-3/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a/=node_modules/erc721a/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/Zybra/interfaces/IERC7575.sol\":{\"keccak256\":\"0xd20d90aef2774e7fedd5e1aecd5ab31fba4215d12995052795d1dac0958af712\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4232a8a26349b96f682f90e4f1529d365e44840a3a3ee508829434033632f346\",\"dweb:/ipfs/QmXpAFrFTJNhTWkbdkjTeYgZZmR18oUXCyzuwPZB1ETvHr\"]},\"contracts/Zybra/interfaces/token/IHook.sol\":{\"keccak256\":\"0x0d5b6cdd69fe3ce5dee15d51da8df6a0093e790be993ff56182f1ec1003b6844\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc3b7116cb904b6ab437045dc47971efc5c0fa57585d74a0274522b9d6c18d5f\",\"dweb:/ipfs/QmSBnNakoDMhzBEV2AZoB79nwVT45oUCE8vXiAsuwywN9Z\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"struct HookData","name":"hookData","type":"tuple","components":[{"internalType":"bytes16","name":"from","type":"bytes16"},{"internalType":"bytes16","name":"to","type":"bytes16"}]}],"stateMutability":"view","type":"function","name":"checkERC20Transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"struct HookData","name":"hookdata","type":"tuple","components":[{"internalType":"bytes16","name":"from","type":"bytes16"},{"internalType":"bytes16","name":"to","type":"bytes16"}]}],"stateMutability":"nonpayable","type":"function","name":"onERC20AuthTransfer","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"struct HookData","name":"hookdata","type":"tuple","components":[{"internalType":"bytes16","name":"from","type":"bytes16"},{"internalType":"bytes16","name":"to","type":"bytes16"}]}],"stateMutability":"nonpayable","type":"function","name":"onERC20Transfer","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"bytes","name":"update","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"updateRestriction"}],"devdoc":{"kind":"dev","methods":{"onERC20AuthTransfer(address,address,address,uint256,(bytes16,bytes16))":{"details":"MUST return bytes4(keccak256(\"onERC20AuthTransfer(address,address,address,uint256,(bytes16,bytes16))\"))         if successful"},"onERC20Transfer(address,address,uint256,(bytes16,bytes16))":{"details":"MUST return bytes4(keccak256(\"onERC20Transfer(address,address,uint256,(bytes16,bytes16))\"))         if successful"},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"updateRestriction(address,bytes)":{"details":"MAY be user specific, which would be included in the encoded `update` value"}},"version":1},"userdoc":{"kind":"user","methods":{"checkERC20Transfer(address,address,uint256,(bytes16,bytes16))":{"notice":"Check if given transfer can be performed"},"onERC20AuthTransfer(address,address,address,uint256,(bytes16,bytes16))":{"notice":"Callback on authorized ERC20 transfer."},"onERC20Transfer(address,address,uint256,(bytes16,bytes16))":{"notice":"Callback on standard ERC20 transfer."},"updateRestriction(address,bytes)":{"notice":"Update a set of restriction for a token"}},"version":1}},"settings":{"remappings":["@arbitrum/=node_modules/@arbitrum/","@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@eth-optimism/","@layerzerolabs/=node_modules/@layerzerolabs/","@offchainlabs/=node_modules/@offchainlabs/","@openzeppelin-3/=node_modules/@openzeppelin-3/","@openzeppelin/=node_modules/@openzeppelin/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@scroll-tech/=node_modules/@scroll-tech/","@uniswap/=node_modules/@uniswap/","ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a/=node_modules/erc721a/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/"],"optimizer":{"enabled":true,"runs":100},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/Zybra/interfaces/token/IHook.sol":"IHook"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"contracts/Zybra/interfaces/IERC7575.sol":{"keccak256":"0xd20d90aef2774e7fedd5e1aecd5ab31fba4215d12995052795d1dac0958af712","urls":["bzz-raw://4232a8a26349b96f682f90e4f1529d365e44840a3a3ee508829434033632f346","dweb:/ipfs/QmXpAFrFTJNhTWkbdkjTeYgZZmR18oUXCyzuwPZB1ETvHr"],"license":"AGPL-3.0-only"},"contracts/Zybra/interfaces/token/IHook.sol":{"keccak256":"0x0d5b6cdd69fe3ce5dee15d51da8df6a0093e790be993ff56182f1ec1003b6844","urls":["bzz-raw://dc3b7116cb904b6ab437045dc47971efc5c0fa57585d74a0274522b9d6c18d5f","dweb:/ipfs/QmSBnNakoDMhzBEV2AZoB79nwVT45oUCE8vXiAsuwywN9Z"],"license":"AGPL-3.0-only"}},"version":1},"id":33}